trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  MajorVersion: 1
  MinorVersion: 0
  InitialReleaseTagNumber: 1
  IncrementReleaseTagNumber: $[counter(variables['InitialReleaseTagNumber'], 0)]
  solution: '**/*.sln'

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    version: 5.0.x
    performMultiLevelLookup: true
    includePreviewVersions: true
    
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: 'restore'
    projects: '**/*.sln'
    feedsToUse: 'config'
    nugetConfigPath: './NuGet.Config'
  
- task: DotNetCoreCLI@2
  displayName: Publish
  inputs:
    command: publish
    publishWebProjects: False
    zipAfterPublish: False
    arguments: '-r linux-x64 --output $(Build.ArtifactStagingDirectory)'
    

- task: PublishBuildArtifacts@1
  displayName: Send Artifact
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'Dexter'

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'github.com_Frostrix'
    repositoryName: 'Frostrix/Dexter'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: 'v$(MajorVersion).$(MinorVersion).$(IncrementReleaseTagNumber)'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'